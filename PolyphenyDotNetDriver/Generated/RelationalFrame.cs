// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: org/polypheny/prism/relational_frame.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Polypheny.Prism {

  /// <summary>Holder for reflection information generated from org/polypheny/prism/relational_frame.proto</summary>
  public static partial class RelationalFrameReflection {

    #region Descriptor
    /// <summary>File descriptor for org/polypheny/prism/relational_frame.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RelationalFrameReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CipvcmcvcG9seXBoZW55L3ByaXNtL3JlbGF0aW9uYWxfZnJhbWUucHJvdG8S",
            "E29yZy5wb2x5cGhlbnkucHJpc20aH29yZy9wb2x5cGhlbnkvcHJpc20vdmFs",
            "dWUucHJvdG8ibwoPUmVsYXRpb25hbEZyYW1lEjQKC2NvbHVtbl9tZXRhGAEg",
            "AygLMh8ub3JnLnBvbHlwaGVueS5wcmlzbS5Db2x1bW5NZXRhEiYKBHJvd3MY",
            "AiADKAsyGC5vcmcucG9seXBoZW55LnByaXNtLlJvdyKDAgoKQ29sdW1uTWV0",
            "YRIUCgxjb2x1bW5faW5kZXgYASABKAUSEwoLaXNfbnVsbGFibGUYAiABKAgS",
            "DgoGbGVuZ3RoGAMgASgFEhQKDGNvbHVtbl9sYWJlbBgEIAEoCRITCgtjb2x1",
            "bW5fbmFtZRgFIAEoCRIRCglwcmVjaXNpb24YBiABKAUSEwoLZW50aXR5X25h",
            "bWUYByABKAkSEwoLc2NoZW1hX25hbWUYCCABKAkSMAoJdHlwZV9tZXRhGAkg",
            "ASgLMh0ub3JnLnBvbHlwaGVueS5wcmlzbS5UeXBlTWV0YRINCgVzY2FsZRgK",
            "IAEoBRIRCgluYW1lc3BhY2UYCyABKAkirQEKCUZpZWxkTWV0YRITCgtmaWVs",
            "ZF9pbmRleBgBIAEoBRITCgtpc19udWxsYWJsZRgCIAEoCBIOCgZsZW5ndGgY",
            "AyABKAUSEgoKZmllbGRfbmFtZRgEIAEoCRIRCglwcmVjaXNpb24YBiABKAUS",
            "MAoJdHlwZV9tZXRhGAkgASgLMh0ub3JnLnBvbHlwaGVueS5wcmlzbS5UeXBl",
            "TWV0YRINCgVzY2FsZRgKIAEoBSLbAQoIVHlwZU1ldGESPAoQcHJvdG9fdmFs",
            "dWVfdHlwZRgBIAEoDjIiLm9yZy5wb2x5cGhlbnkucHJpc20uUHJvdG9Qb2x5",
            "VHlwZRI5CgtzdHJ1Y3RfbWV0YRgCIAEoCzIfLm9yZy5wb2x5cGhlbnkucHJp",
            "c20uU3RydWN0TWV0YUgAiAEBEjcKCmFycmF5X21ldGEYAyABKAsyHi5vcmcu",
            "cG9seXBoZW55LnByaXNtLkFycmF5TWV0YUgBiAEBQg4KDF9zdHJ1Y3RfbWV0",
            "YUINCgtfYXJyYXlfbWV0YSJBCgpTdHJ1Y3RNZXRhEjMKC2ZpZWxkX21ldGFz",
            "GAEgAygLMh4ub3JnLnBvbHlwaGVueS5wcmlzbS5GaWVsZE1ldGEiQAoJQXJy",
            "YXlNZXRhEjMKDGVsZW1lbnRfdHlwZRgBIAEoCzIdLm9yZy5wb2x5cGhlbnku",
            "cHJpc20uVHlwZU1ldGEiNgoDUm93Ei8KBnZhbHVlcxgBIAMoCzIfLm9yZy5w",
            "b2x5cGhlbnkucHJpc20uUHJvdG9WYWx1ZUJWChNvcmcucG9seXBoZW55LnBy",
            "aXNtQhBSZWxhdGlvbmFsUmVzdWx0UAFaGW9yZy9wb2x5cGhlbnkvcHJpc207",
            "cHJpc22qAg9Qb2x5cGhlbnkuUHJpc21iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Polypheny.Prism.ValueReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.RelationalFrame), global::Polypheny.Prism.RelationalFrame.Parser, new[]{ "ColumnMeta", "Rows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.ColumnMeta), global::Polypheny.Prism.ColumnMeta.Parser, new[]{ "ColumnIndex", "IsNullable", "Length", "ColumnLabel", "ColumnName", "Precision", "EntityName", "SchemaName", "TypeMeta", "Scale", "Namespace" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.FieldMeta), global::Polypheny.Prism.FieldMeta.Parser, new[]{ "FieldIndex", "IsNullable", "Length", "FieldName", "Precision", "TypeMeta", "Scale" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.TypeMeta), global::Polypheny.Prism.TypeMeta.Parser, new[]{ "ProtoValueType", "StructMeta", "ArrayMeta" }, new[]{ "StructMeta", "ArrayMeta" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.StructMeta), global::Polypheny.Prism.StructMeta.Parser, new[]{ "FieldMetas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.ArrayMeta), global::Polypheny.Prism.ArrayMeta.Parser, new[]{ "ElementType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.Row), global::Polypheny.Prism.Row.Parser, new[]{ "Values" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///The RelationalFrame message encapsulates the structure of a relational frame, which includes metadata about columns and rows of data within a relational table.
  ///This structure is essential for representing the schema and data of a table in a structured format, facilitating data manipulation and query operations.
  /// </summary>
  public sealed partial class RelationalFrame : pb::IMessage<RelationalFrame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RelationalFrame> _parser = new pb::MessageParser<RelationalFrame>(() => new RelationalFrame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelationalFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.RelationalFrameReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationalFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationalFrame(RelationalFrame other) : this() {
      columnMeta_ = other.columnMeta_.Clone();
      rows_ = other.rows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationalFrame Clone() {
      return new RelationalFrame(this);
    }

    /// <summary>Field number for the "column_meta" field.</summary>
    public const int ColumnMetaFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Polypheny.Prism.ColumnMeta> _repeated_columnMeta_codec
        = pb::FieldCodec.ForMessage(10, global::Polypheny.Prism.ColumnMeta.Parser);
    private readonly pbc::RepeatedField<global::Polypheny.Prism.ColumnMeta> columnMeta_ = new pbc::RepeatedField<global::Polypheny.Prism.ColumnMeta>();
    /// <summary>
    ///
    ///A collection of metadata about each column in the frame.
    ///This provides details such as index, nullability, length, precision, and type information, defining the schema of the table represented by the relational frame.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Polypheny.Prism.ColumnMeta> ColumnMeta {
      get { return columnMeta_; }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Polypheny.Prism.Row> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::Polypheny.Prism.Row.Parser);
    private readonly pbc::RepeatedField<global::Polypheny.Prism.Row> rows_ = new pbc::RepeatedField<global::Polypheny.Prism.Row>();
    /// <summary>
    ///
    ///The rows of data within the frame.
    ///Each row consists of a series of ProtoValue objects representing the values in the row, mirroring the actual data stored in the table's rows according to the schema defined by the column metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Polypheny.Prism.Row> Rows {
      get { return rows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelationalFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelationalFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!columnMeta_.Equals(other.columnMeta_)) return false;
      if(!rows_.Equals(other.rows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= columnMeta_.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      columnMeta_.WriteTo(output, _repeated_columnMeta_codec);
      rows_.WriteTo(output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      columnMeta_.WriteTo(ref output, _repeated_columnMeta_codec);
      rows_.WriteTo(ref output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += columnMeta_.CalculateSize(_repeated_columnMeta_codec);
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelationalFrame other) {
      if (other == null) {
        return;
      }
      columnMeta_.Add(other.columnMeta_);
      rows_.Add(other.rows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            columnMeta_.AddEntriesFrom(input, _repeated_columnMeta_codec);
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            columnMeta_.AddEntriesFrom(ref input, _repeated_columnMeta_codec);
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The ColumnMeta message holds metadata related to a specific column within a relational table.
  /// </summary>
  public sealed partial class ColumnMeta : pb::IMessage<ColumnMeta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ColumnMeta> _parser = new pb::MessageParser<ColumnMeta>(() => new ColumnMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ColumnMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.RelationalFrameReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnMeta(ColumnMeta other) : this() {
      columnIndex_ = other.columnIndex_;
      isNullable_ = other.isNullable_;
      length_ = other.length_;
      columnLabel_ = other.columnLabel_;
      columnName_ = other.columnName_;
      precision_ = other.precision_;
      entityName_ = other.entityName_;
      schemaName_ = other.schemaName_;
      typeMeta_ = other.typeMeta_ != null ? other.typeMeta_.Clone() : null;
      scale_ = other.scale_;
      namespace_ = other.namespace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ColumnMeta Clone() {
      return new ColumnMeta(this);
    }

    /// <summary>Field number for the "column_index" field.</summary>
    public const int ColumnIndexFieldNumber = 1;
    private int columnIndex_;
    /// <summary>
    /// Index of the column within the table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ColumnIndex {
      get { return columnIndex_; }
      set {
        columnIndex_ = value;
      }
    }

    /// <summary>Field number for the "is_nullable" field.</summary>
    public const int IsNullableFieldNumber = 2;
    private bool isNullable_;
    /// <summary>
    /// Indicates whether the column can contain null values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsNullable {
      get { return isNullable_; }
      set {
        isNullable_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 3;
    private int length_;
    /// <summary>
    /// The length of the column values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "column_label" field.</summary>
    public const int ColumnLabelFieldNumber = 4;
    private string columnLabel_ = "";
    /// <summary>
    /// Label associated with the column, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColumnLabel {
      get { return columnLabel_; }
      set {
        columnLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "column_name" field.</summary>
    public const int ColumnNameFieldNumber = 5;
    private string columnName_ = "";
    /// <summary>
    /// Name of the column.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColumnName {
      get { return columnName_; }
      set {
        columnName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "precision" field.</summary>
    public const int PrecisionFieldNumber = 6;
    private int precision_;
    /// <summary>
    /// Precision of the column, usually for numerical values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Precision {
      get { return precision_; }
      set {
        precision_ = value;
      }
    }

    /// <summary>Field number for the "entity_name" field.</summary>
    public const int EntityNameFieldNumber = 7;
    private string entityName_ = "";
    /// <summary>
    /// Name of the entity that the column represents.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityName {
      get { return entityName_; }
      set {
        entityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema_name" field.</summary>
    public const int SchemaNameFieldNumber = 8;
    private string schemaName_ = "";
    /// <summary>
    /// Name of the schema that the column belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SchemaName {
      get { return schemaName_; }
      set {
        schemaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type_meta" field.</summary>
    public const int TypeMetaFieldNumber = 9;
    private global::Polypheny.Prism.TypeMeta typeMeta_;
    /// <summary>
    /// Metadata describing the type of the column.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.TypeMeta TypeMeta {
      get { return typeMeta_; }
      set {
        typeMeta_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 10;
    private int scale_;
    /// <summary>
    /// Scale of the column, typically for numerical values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 11;
    private string namespace_ = "";
    /// <summary>
    /// Namespace the column resides in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ColumnMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ColumnMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ColumnIndex != other.ColumnIndex) return false;
      if (IsNullable != other.IsNullable) return false;
      if (Length != other.Length) return false;
      if (ColumnLabel != other.ColumnLabel) return false;
      if (ColumnName != other.ColumnName) return false;
      if (Precision != other.Precision) return false;
      if (EntityName != other.EntityName) return false;
      if (SchemaName != other.SchemaName) return false;
      if (!object.Equals(TypeMeta, other.TypeMeta)) return false;
      if (Scale != other.Scale) return false;
      if (Namespace != other.Namespace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ColumnIndex != 0) hash ^= ColumnIndex.GetHashCode();
      if (IsNullable != false) hash ^= IsNullable.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (ColumnLabel.Length != 0) hash ^= ColumnLabel.GetHashCode();
      if (ColumnName.Length != 0) hash ^= ColumnName.GetHashCode();
      if (Precision != 0) hash ^= Precision.GetHashCode();
      if (EntityName.Length != 0) hash ^= EntityName.GetHashCode();
      if (SchemaName.Length != 0) hash ^= SchemaName.GetHashCode();
      if (typeMeta_ != null) hash ^= TypeMeta.GetHashCode();
      if (Scale != 0) hash ^= Scale.GetHashCode();
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ColumnIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ColumnIndex);
      }
      if (IsNullable != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsNullable);
      }
      if (Length != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Length);
      }
      if (ColumnLabel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ColumnLabel);
      }
      if (ColumnName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ColumnName);
      }
      if (Precision != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Precision);
      }
      if (EntityName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(EntityName);
      }
      if (SchemaName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SchemaName);
      }
      if (typeMeta_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TypeMeta);
      }
      if (Scale != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Scale);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Namespace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ColumnIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ColumnIndex);
      }
      if (IsNullable != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsNullable);
      }
      if (Length != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Length);
      }
      if (ColumnLabel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ColumnLabel);
      }
      if (ColumnName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ColumnName);
      }
      if (Precision != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Precision);
      }
      if (EntityName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(EntityName);
      }
      if (SchemaName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SchemaName);
      }
      if (typeMeta_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TypeMeta);
      }
      if (Scale != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Scale);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Namespace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ColumnIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColumnIndex);
      }
      if (IsNullable != false) {
        size += 1 + 1;
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (ColumnLabel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnLabel);
      }
      if (ColumnName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnName);
      }
      if (Precision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Precision);
      }
      if (EntityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityName);
      }
      if (SchemaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaName);
      }
      if (typeMeta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeMeta);
      }
      if (Scale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Scale);
      }
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ColumnMeta other) {
      if (other == null) {
        return;
      }
      if (other.ColumnIndex != 0) {
        ColumnIndex = other.ColumnIndex;
      }
      if (other.IsNullable != false) {
        IsNullable = other.IsNullable;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.ColumnLabel.Length != 0) {
        ColumnLabel = other.ColumnLabel;
      }
      if (other.ColumnName.Length != 0) {
        ColumnName = other.ColumnName;
      }
      if (other.Precision != 0) {
        Precision = other.Precision;
      }
      if (other.EntityName.Length != 0) {
        EntityName = other.EntityName;
      }
      if (other.SchemaName.Length != 0) {
        SchemaName = other.SchemaName;
      }
      if (other.typeMeta_ != null) {
        if (typeMeta_ == null) {
          TypeMeta = new global::Polypheny.Prism.TypeMeta();
        }
        TypeMeta.MergeFrom(other.TypeMeta);
      }
      if (other.Scale != 0) {
        Scale = other.Scale;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ColumnIndex = input.ReadInt32();
            break;
          }
          case 16: {
            IsNullable = input.ReadBool();
            break;
          }
          case 24: {
            Length = input.ReadInt32();
            break;
          }
          case 34: {
            ColumnLabel = input.ReadString();
            break;
          }
          case 42: {
            ColumnName = input.ReadString();
            break;
          }
          case 48: {
            Precision = input.ReadInt32();
            break;
          }
          case 58: {
            EntityName = input.ReadString();
            break;
          }
          case 66: {
            SchemaName = input.ReadString();
            break;
          }
          case 74: {
            if (typeMeta_ == null) {
              TypeMeta = new global::Polypheny.Prism.TypeMeta();
            }
            input.ReadMessage(TypeMeta);
            break;
          }
          case 80: {
            Scale = input.ReadInt32();
            break;
          }
          case 90: {
            Namespace = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ColumnIndex = input.ReadInt32();
            break;
          }
          case 16: {
            IsNullable = input.ReadBool();
            break;
          }
          case 24: {
            Length = input.ReadInt32();
            break;
          }
          case 34: {
            ColumnLabel = input.ReadString();
            break;
          }
          case 42: {
            ColumnName = input.ReadString();
            break;
          }
          case 48: {
            Precision = input.ReadInt32();
            break;
          }
          case 58: {
            EntityName = input.ReadString();
            break;
          }
          case 66: {
            SchemaName = input.ReadString();
            break;
          }
          case 74: {
            if (typeMeta_ == null) {
              TypeMeta = new global::Polypheny.Prism.TypeMeta();
            }
            input.ReadMessage(TypeMeta);
            break;
          }
          case 80: {
            Scale = input.ReadInt32();
            break;
          }
          case 90: {
            Namespace = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The FieldMeta message provides metadata for individual fields, which can be part of complex structures like arrays or structs.
  /// </summary>
  public sealed partial class FieldMeta : pb::IMessage<FieldMeta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FieldMeta> _parser = new pb::MessageParser<FieldMeta>(() => new FieldMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FieldMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.RelationalFrameReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldMeta(FieldMeta other) : this() {
      fieldIndex_ = other.fieldIndex_;
      isNullable_ = other.isNullable_;
      length_ = other.length_;
      fieldName_ = other.fieldName_;
      precision_ = other.precision_;
      typeMeta_ = other.typeMeta_ != null ? other.typeMeta_.Clone() : null;
      scale_ = other.scale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldMeta Clone() {
      return new FieldMeta(this);
    }

    /// <summary>Field number for the "field_index" field.</summary>
    public const int FieldIndexFieldNumber = 1;
    private int fieldIndex_;
    /// <summary>
    /// Index of the field within its containing structure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FieldIndex {
      get { return fieldIndex_; }
      set {
        fieldIndex_ = value;
      }
    }

    /// <summary>Field number for the "is_nullable" field.</summary>
    public const int IsNullableFieldNumber = 2;
    private bool isNullable_;
    /// <summary>
    /// Indicates whether the field can contain null values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsNullable {
      get { return isNullable_; }
      set {
        isNullable_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 3;
    private int length_;
    /// <summary>
    /// Length of the field’s value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "field_name" field.</summary>
    public const int FieldNameFieldNumber = 4;
    private string fieldName_ = "";
    /// <summary>
    /// Name of the field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "precision" field.</summary>
    public const int PrecisionFieldNumber = 6;
    private int precision_;
    /// <summary>
    /// Precision of the field, usually for numerical values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Precision {
      get { return precision_; }
      set {
        precision_ = value;
      }
    }

    /// <summary>Field number for the "type_meta" field.</summary>
    public const int TypeMetaFieldNumber = 9;
    private global::Polypheny.Prism.TypeMeta typeMeta_;
    /// <summary>
    /// Metadata describing the type of the field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.TypeMeta TypeMeta {
      get { return typeMeta_; }
      set {
        typeMeta_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 10;
    private int scale_;
    /// <summary>
    /// Scale of the field, typically for numerical values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FieldMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FieldMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldIndex != other.FieldIndex) return false;
      if (IsNullable != other.IsNullable) return false;
      if (Length != other.Length) return false;
      if (FieldName != other.FieldName) return false;
      if (Precision != other.Precision) return false;
      if (!object.Equals(TypeMeta, other.TypeMeta)) return false;
      if (Scale != other.Scale) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldIndex != 0) hash ^= FieldIndex.GetHashCode();
      if (IsNullable != false) hash ^= IsNullable.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (Precision != 0) hash ^= Precision.GetHashCode();
      if (typeMeta_ != null) hash ^= TypeMeta.GetHashCode();
      if (Scale != 0) hash ^= Scale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FieldIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FieldIndex);
      }
      if (IsNullable != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsNullable);
      }
      if (Length != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Length);
      }
      if (FieldName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FieldName);
      }
      if (Precision != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Precision);
      }
      if (typeMeta_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TypeMeta);
      }
      if (Scale != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FieldIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FieldIndex);
      }
      if (IsNullable != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsNullable);
      }
      if (Length != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Length);
      }
      if (FieldName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FieldName);
      }
      if (Precision != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Precision);
      }
      if (typeMeta_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TypeMeta);
      }
      if (Scale != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FieldIndex);
      }
      if (IsNullable != false) {
        size += 1 + 1;
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (Precision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Precision);
      }
      if (typeMeta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeMeta);
      }
      if (Scale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Scale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FieldMeta other) {
      if (other == null) {
        return;
      }
      if (other.FieldIndex != 0) {
        FieldIndex = other.FieldIndex;
      }
      if (other.IsNullable != false) {
        IsNullable = other.IsNullable;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      if (other.Precision != 0) {
        Precision = other.Precision;
      }
      if (other.typeMeta_ != null) {
        if (typeMeta_ == null) {
          TypeMeta = new global::Polypheny.Prism.TypeMeta();
        }
        TypeMeta.MergeFrom(other.TypeMeta);
      }
      if (other.Scale != 0) {
        Scale = other.Scale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FieldIndex = input.ReadInt32();
            break;
          }
          case 16: {
            IsNullable = input.ReadBool();
            break;
          }
          case 24: {
            Length = input.ReadInt32();
            break;
          }
          case 34: {
            FieldName = input.ReadString();
            break;
          }
          case 48: {
            Precision = input.ReadInt32();
            break;
          }
          case 74: {
            if (typeMeta_ == null) {
              TypeMeta = new global::Polypheny.Prism.TypeMeta();
            }
            input.ReadMessage(TypeMeta);
            break;
          }
          case 80: {
            Scale = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FieldIndex = input.ReadInt32();
            break;
          }
          case 16: {
            IsNullable = input.ReadBool();
            break;
          }
          case 24: {
            Length = input.ReadInt32();
            break;
          }
          case 34: {
            FieldName = input.ReadString();
            break;
          }
          case 48: {
            Precision = input.ReadInt32();
            break;
          }
          case 74: {
            if (typeMeta_ == null) {
              TypeMeta = new global::Polypheny.Prism.TypeMeta();
            }
            input.ReadMessage(TypeMeta);
            break;
          }
          case 80: {
            Scale = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The TypeMeta message is a comprehensive descriptor for the data types used within the system.
  ///This message not only defines simple data types but also accommodates complex types such as structures and arrays.
  ///Its flexibility allows it to describe a wide range of data types and data structures.
  /// </summary>
  public sealed partial class TypeMeta : pb::IMessage<TypeMeta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TypeMeta> _parser = new pb::MessageParser<TypeMeta>(() => new TypeMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypeMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.RelationalFrameReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeMeta(TypeMeta other) : this() {
      protoValueType_ = other.protoValueType_;
      structMeta_ = other.structMeta_ != null ? other.structMeta_.Clone() : null;
      arrayMeta_ = other.arrayMeta_ != null ? other.arrayMeta_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeMeta Clone() {
      return new TypeMeta(this);
    }

    /// <summary>Field number for the "proto_value_type" field.</summary>
    public const int ProtoValueTypeFieldNumber = 1;
    private global::Polypheny.Prism.ProtoPolyType protoValueType_ = global::Polypheny.Prism.ProtoPolyType.Unspecified;
    /// <summary>
    /// Represents the fundamental data type of the value. This can be any basic data type depending on the definitions within ProtoValue.ProtoValueType.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.ProtoPolyType ProtoValueType {
      get { return protoValueType_; }
      set {
        protoValueType_ = value;
      }
    }

    /// <summary>Field number for the "struct_meta" field.</summary>
    public const int StructMetaFieldNumber = 2;
    private global::Polypheny.Prism.StructMeta structMeta_;
    /// <summary>
    /// If the proto_value_type indicates a structure, this field provides the metadata for that structure. Contains details about the fields within the structure. This field will be absent for non-structured types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.StructMeta StructMeta {
      get { return structMeta_; }
      set {
        structMeta_ = value;
      }
    }

    /// <summary>Field number for the "array_meta" field.</summary>
    public const int ArrayMetaFieldNumber = 3;
    private global::Polypheny.Prism.ArrayMeta arrayMeta_;
    /// <summary>
    /// If the proto_value_type indicates an array, this field provides metadata about the type of elements within the array. This field will be absent for non-array types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.ArrayMeta ArrayMeta {
      get { return arrayMeta_; }
      set {
        arrayMeta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypeMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypeMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtoValueType != other.ProtoValueType) return false;
      if (!object.Equals(StructMeta, other.StructMeta)) return false;
      if (!object.Equals(ArrayMeta, other.ArrayMeta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtoValueType != global::Polypheny.Prism.ProtoPolyType.Unspecified) hash ^= ProtoValueType.GetHashCode();
      if (structMeta_ != null) hash ^= StructMeta.GetHashCode();
      if (arrayMeta_ != null) hash ^= ArrayMeta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProtoValueType != global::Polypheny.Prism.ProtoPolyType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ProtoValueType);
      }
      if (structMeta_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StructMeta);
      }
      if (arrayMeta_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArrayMeta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProtoValueType != global::Polypheny.Prism.ProtoPolyType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ProtoValueType);
      }
      if (structMeta_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StructMeta);
      }
      if (arrayMeta_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ArrayMeta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtoValueType != global::Polypheny.Prism.ProtoPolyType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtoValueType);
      }
      if (structMeta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StructMeta);
      }
      if (arrayMeta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrayMeta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypeMeta other) {
      if (other == null) {
        return;
      }
      if (other.ProtoValueType != global::Polypheny.Prism.ProtoPolyType.Unspecified) {
        ProtoValueType = other.ProtoValueType;
      }
      if (other.structMeta_ != null) {
        if (structMeta_ == null) {
          StructMeta = new global::Polypheny.Prism.StructMeta();
        }
        StructMeta.MergeFrom(other.StructMeta);
      }
      if (other.arrayMeta_ != null) {
        if (arrayMeta_ == null) {
          ArrayMeta = new global::Polypheny.Prism.ArrayMeta();
        }
        ArrayMeta.MergeFrom(other.ArrayMeta);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProtoValueType = (global::Polypheny.Prism.ProtoPolyType) input.ReadEnum();
            break;
          }
          case 18: {
            if (structMeta_ == null) {
              StructMeta = new global::Polypheny.Prism.StructMeta();
            }
            input.ReadMessage(StructMeta);
            break;
          }
          case 26: {
            if (arrayMeta_ == null) {
              ArrayMeta = new global::Polypheny.Prism.ArrayMeta();
            }
            input.ReadMessage(ArrayMeta);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProtoValueType = (global::Polypheny.Prism.ProtoPolyType) input.ReadEnum();
            break;
          }
          case 18: {
            if (structMeta_ == null) {
              StructMeta = new global::Polypheny.Prism.StructMeta();
            }
            input.ReadMessage(StructMeta);
            break;
          }
          case 26: {
            if (arrayMeta_ == null) {
              ArrayMeta = new global::Polypheny.Prism.ArrayMeta();
            }
            input.ReadMessage(ArrayMeta);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The StructMeta message provides metadata specific to structured types, giving details about the fields that make up the structure.
  /// </summary>
  public sealed partial class StructMeta : pb::IMessage<StructMeta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StructMeta> _parser = new pb::MessageParser<StructMeta>(() => new StructMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StructMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.RelationalFrameReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructMeta(StructMeta other) : this() {
      fieldMetas_ = other.fieldMetas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StructMeta Clone() {
      return new StructMeta(this);
    }

    /// <summary>Field number for the "field_metas" field.</summary>
    public const int FieldMetasFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Polypheny.Prism.FieldMeta> _repeated_fieldMetas_codec
        = pb::FieldCodec.ForMessage(10, global::Polypheny.Prism.FieldMeta.Parser);
    private readonly pbc::RepeatedField<global::Polypheny.Prism.FieldMeta> fieldMetas_ = new pbc::RepeatedField<global::Polypheny.Prism.FieldMeta>();
    /// <summary>
    ///
    ///A collection of metadata entries, one for each field within the structure.
    ///Each FieldMeta provides details like the field’s name, type, nullability, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Polypheny.Prism.FieldMeta> FieldMetas {
      get { return fieldMetas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StructMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StructMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fieldMetas_.Equals(other.fieldMetas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fieldMetas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fieldMetas_.WriteTo(output, _repeated_fieldMetas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fieldMetas_.WriteTo(ref output, _repeated_fieldMetas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fieldMetas_.CalculateSize(_repeated_fieldMetas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StructMeta other) {
      if (other == null) {
        return;
      }
      fieldMetas_.Add(other.fieldMetas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fieldMetas_.AddEntriesFrom(input, _repeated_fieldMetas_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fieldMetas_.AddEntriesFrom(ref input, _repeated_fieldMetas_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The ArrayMeta message provides metadata about array types, detailing the kind of elements they can hold.
  /// </summary>
  public sealed partial class ArrayMeta : pb::IMessage<ArrayMeta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArrayMeta> _parser = new pb::MessageParser<ArrayMeta>(() => new ArrayMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.RelationalFrameReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayMeta(ArrayMeta other) : this() {
      elementType_ = other.elementType_ != null ? other.elementType_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayMeta Clone() {
      return new ArrayMeta(this);
    }

    /// <summary>Field number for the "element_type" field.</summary>
    public const int ElementTypeFieldNumber = 1;
    private global::Polypheny.Prism.TypeMeta elementType_;
    /// <summary>
    ///
    ///TypeMeta 	This field describes the type of elements contained within the array.
    ///It uses the TypeMeta message, meaning an array can contain any data type, including nested arrays or structures.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.TypeMeta ElementType {
      get { return elementType_; }
      set {
        elementType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ElementType, other.ElementType)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (elementType_ != null) hash ^= ElementType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (elementType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ElementType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (elementType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ElementType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (elementType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ElementType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayMeta other) {
      if (other == null) {
        return;
      }
      if (other.elementType_ != null) {
        if (elementType_ == null) {
          ElementType = new global::Polypheny.Prism.TypeMeta();
        }
        ElementType.MergeFrom(other.ElementType);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (elementType_ == null) {
              ElementType = new global::Polypheny.Prism.TypeMeta();
            }
            input.ReadMessage(ElementType);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (elementType_ == null) {
              ElementType = new global::Polypheny.Prism.TypeMeta();
            }
            input.ReadMessage(ElementType);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The Row message represents a single row within a relational frame.
  /// </summary>
  public sealed partial class Row : pb::IMessage<Row>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Row> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.RelationalFrameReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row(Row other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Row Clone() {
      return new Row(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Polypheny.Prism.ProtoValue> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Polypheny.Prism.ProtoValue.Parser);
    private readonly pbc::RepeatedField<global::Polypheny.Prism.ProtoValue> values_ = new pbc::RepeatedField<global::Polypheny.Prism.ProtoValue>();
    /// <summary>
    /// The values within the row, represented as a series of ProtoValue objects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Polypheny.Prism.ProtoValue> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Row);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Row other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Row other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
