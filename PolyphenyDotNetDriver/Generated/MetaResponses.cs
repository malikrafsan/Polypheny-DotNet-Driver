// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: org/polypheny/prism/meta_responses.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Polypheny.Prism {

  /// <summary>Holder for reflection information generated from org/polypheny/prism/meta_responses.proto</summary>
  public static partial class MetaResponsesReflection {

    #region Descriptor
    /// <summary>File descriptor for org/polypheny/prism/meta_responses.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MetaResponsesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihvcmcvcG9seXBoZW55L3ByaXNtL21ldGFfcmVzcG9uc2VzLnByb3RvEhNv",
            "cmcucG9seXBoZW55LnByaXNtImwKE0RibXNWZXJzaW9uUmVzcG9uc2USEQoJ",
            "ZGJtc19uYW1lGAEgASgJEhQKDHZlcnNpb25fbmFtZRgCIAEoCRIVCg1tYWpv",
            "cl92ZXJzaW9uGAMgASgFEhUKDW1pbm9yX3ZlcnNpb24YBCABKAUiNQoYRGVm",
            "YXVsdE5hbWVzcGFjZVJlc3BvbnNlEhkKEWRlZmF1bHRfbmFtZXNwYWNlGAEg",
            "ASgJIkkKElRhYmxlVHlwZXNSZXNwb25zZRIzCgt0YWJsZV90eXBlcxgBIAMo",
            "CzIeLm9yZy5wb2x5cGhlbnkucHJpc20uVGFibGVUeXBlIh8KCVRhYmxlVHlw",
            "ZRISCgp0YWJsZV90eXBlGAEgASgJIjkKDVR5cGVzUmVzcG9uc2USKAoFdHlw",
            "ZXMYASADKAsyGS5vcmcucG9seXBoZW55LnByaXNtLlR5cGUijgIKBFR5cGUS",
            "EQoJdHlwZV9uYW1lGAEgASgJEhEKCXByZWNpc2lvbhgCIAEoBRIbCg5saXRl",
            "cmFsX3ByZWZpeBgDIAEoCUgAiAEBEhsKDmxpdGVyYWxfc3VmZml4GAQgASgJ",
            "SAGIAQESGQoRaXNfY2FzZV9zZW5zaXRpdmUYBSABKAgSFQoNaXNfc2VhcmNo",
            "YWJsZRgGIAEoBRIZChFpc19hdXRvX2luY3JlbWVudBgHIAEoCBIRCgltaW5f",
            "c2NhbGUYCCABKAUSEQoJbWF4X3NjYWxlGAkgASgFEg0KBXJhZGl4GAogASgF",
            "QhEKD19saXRlcmFsX3ByZWZpeEIRCg9fbGl0ZXJhbF9zdWZmaXgiWQoPVXNl",
            "ckRlZmluZWRUeXBlEhEKCXR5cGVfbmFtZRgBIAEoCRIzCgt2YWx1ZV9tZXRh",
            "cxgCIAMoCzIeLm9yZy5wb2x5cGhlbnkucHJpc20uVmFsdWVNZXRhIh8KCVZh",
            "bHVlTWV0YRISCgp2YWx1ZV9uYW1lGAEgASgJIiQKEk1ldGFTdHJpbmdSZXNw",
            "b25zZRIOCgZzdHJpbmcYASABKAkiSAoSUHJvY2VkdXJlc1Jlc3BvbnNlEjIK",
            "CnByb2NlZHVyZXMYASADKAsyHi5vcmcucG9seXBoZW55LnByaXNtLlByb2Nl",
            "ZHVyZSLsAQoJUHJvY2VkdXJlEhQKDHRyaXZpYWxfbmFtZRgBIAEoCRIYChBp",
            "bnB1dF9wYXJhbWV0ZXJzGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEj4K",
            "C3JldHVybl90eXBlGAQgASgOMikub3JnLnBvbHlwaGVueS5wcmlzbS5Qcm9j",
            "ZWR1cmUuUmV0dXJuVHlwZRITCgt1bmlxdWVfbmFtZRgFIAEoCSJFCgpSZXR1",
            "cm5UeXBlEg8KC1VOU1BFQ0lGSUVEEAASCwoHVU5LTk9XThABEg0KCU5PX1JF",
            "U1VMVBACEgoKBlJFU1VMVBADIpgBChRDbGllbnRJbmZvUHJvcGVydGllcxJN",
            "Cgpwcm9wZXJ0aWVzGAEgAygLMjkub3JnLnBvbHlwaGVueS5wcmlzbS5DbGll",
            "bnRJbmZvUHJvcGVydGllcy5Qcm9wZXJ0aWVzRW50cnkaMQoPUHJvcGVydGll",
            "c0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiHgocQ2xp",
            "ZW50SW5mb1Byb3BlcnRpZXNSZXNwb25zZSJxCh5DbGllbnRJbmZvUHJvcGVy",
            "dHlNZXRhUmVzcG9uc2USTwoaY2xpZW50X2luZm9fcHJvcGVydHlfbWV0YXMY",
            "ASADKAsyKy5vcmcucG9seXBoZW55LnByaXNtLkNsaWVudEluZm9Qcm9wZXJ0",
            "eU1ldGEiZAoWQ2xpZW50SW5mb1Byb3BlcnR5TWV0YRILCgNrZXkYASABKAkS",
            "FQoNZGVmYXVsdF92YWx1ZRgCIAEoCRIRCgltYXhsZW5ndGgYAyABKAUSEwoL",
            "ZGVzY3JpcHRpb24YBCABKAkiRQoRRnVuY3Rpb25zUmVzcG9uc2USMAoJZnVu",
            "Y3Rpb25zGAEgAygLMh0ub3JnLnBvbHlwaGVueS5wcmlzbS5GdW5jdGlvbiJe",
            "CghGdW5jdGlvbhIMCgRuYW1lGAEgASgJEg4KBnN5bnRheBgCIAEoCRIZChFm",
            "dW5jdGlvbl9jYXRlZ29yeRgDIAEoCRIZChFpc190YWJsZV9mdW5jdGlvbhgE",
            "IAEoCEJTChNvcmcucG9seXBoZW55LnByaXNtQg1NZXRhUmVzcG9uc2VzUAFa",
            "GW9yZy9wb2x5cGhlbnkvcHJpc207cHJpc22qAg9Qb2x5cGhlbnkuUHJpc21i",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.DbmsVersionResponse), global::Polypheny.Prism.DbmsVersionResponse.Parser, new[]{ "DbmsName", "VersionName", "MajorVersion", "MinorVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.DefaultNamespaceResponse), global::Polypheny.Prism.DefaultNamespaceResponse.Parser, new[]{ "DefaultNamespace" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.TableTypesResponse), global::Polypheny.Prism.TableTypesResponse.Parser, new[]{ "TableTypes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.TableType), global::Polypheny.Prism.TableType.Parser, new[]{ "TableType_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.TypesResponse), global::Polypheny.Prism.TypesResponse.Parser, new[]{ "Types_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.Type), global::Polypheny.Prism.Type.Parser, new[]{ "TypeName", "Precision", "LiteralPrefix", "LiteralSuffix", "IsCaseSensitive", "IsSearchable", "IsAutoIncrement", "MinScale", "MaxScale", "Radix" }, new[]{ "LiteralPrefix", "LiteralSuffix" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.UserDefinedType), global::Polypheny.Prism.UserDefinedType.Parser, new[]{ "TypeName", "ValueMetas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.ValueMeta), global::Polypheny.Prism.ValueMeta.Parser, new[]{ "ValueName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.MetaStringResponse), global::Polypheny.Prism.MetaStringResponse.Parser, new[]{ "String" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.ProceduresResponse), global::Polypheny.Prism.ProceduresResponse.Parser, new[]{ "Procedures" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.Procedure), global::Polypheny.Prism.Procedure.Parser, new[]{ "TrivialName", "InputParameters", "Description", "ReturnType", "UniqueName" }, null, new[]{ typeof(global::Polypheny.Prism.Procedure.Types.ReturnType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.ClientInfoProperties), global::Polypheny.Prism.ClientInfoProperties.Parser, new[]{ "Properties" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.ClientInfoPropertiesResponse), global::Polypheny.Prism.ClientInfoPropertiesResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.ClientInfoPropertyMetaResponse), global::Polypheny.Prism.ClientInfoPropertyMetaResponse.Parser, new[]{ "ClientInfoPropertyMetas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.ClientInfoPropertyMeta), global::Polypheny.Prism.ClientInfoPropertyMeta.Parser, new[]{ "Key", "DefaultValue", "Maxlength", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.FunctionsResponse), global::Polypheny.Prism.FunctionsResponse.Parser, new[]{ "Functions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.Function), global::Polypheny.Prism.Function.Parser, new[]{ "Name", "Syntax", "FunctionCategory", "IsTableFunction" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///The DbmsVersionResponse message relays details about the version and name of the database management system (DBMS) in response to a DbmsVersionRequest.
  /// </summary>
  public sealed partial class DbmsVersionResponse : pb::IMessage<DbmsVersionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DbmsVersionResponse> _parser = new pb::MessageParser<DbmsVersionResponse>(() => new DbmsVersionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DbmsVersionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DbmsVersionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DbmsVersionResponse(DbmsVersionResponse other) : this() {
      dbmsName_ = other.dbmsName_;
      versionName_ = other.versionName_;
      majorVersion_ = other.majorVersion_;
      minorVersion_ = other.minorVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DbmsVersionResponse Clone() {
      return new DbmsVersionResponse(this);
    }

    /// <summary>Field number for the "dbms_name" field.</summary>
    public const int DbmsNameFieldNumber = 1;
    private string dbmsName_ = "";
    /// <summary>
    /// The name of the database management system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DbmsName {
      get { return dbmsName_; }
      set {
        dbmsName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_name" field.</summary>
    public const int VersionNameFieldNumber = 2;
    private string versionName_ = "";
    /// <summary>
    /// The full version name of the DBMS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 3;
    private int majorVersion_;
    /// <summary>
    /// The major version number of the DBMS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MajorVersion {
      get { return majorVersion_; }
      set {
        majorVersion_ = value;
      }
    }

    /// <summary>Field number for the "minor_version" field.</summary>
    public const int MinorVersionFieldNumber = 4;
    private int minorVersion_;
    /// <summary>
    /// The minor version number of the DBMS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinorVersion {
      get { return minorVersion_; }
      set {
        minorVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DbmsVersionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DbmsVersionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DbmsName != other.DbmsName) return false;
      if (VersionName != other.VersionName) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (MinorVersion != other.MinorVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DbmsName.Length != 0) hash ^= DbmsName.GetHashCode();
      if (VersionName.Length != 0) hash ^= VersionName.GetHashCode();
      if (MajorVersion != 0) hash ^= MajorVersion.GetHashCode();
      if (MinorVersion != 0) hash ^= MinorVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DbmsName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DbmsName);
      }
      if (VersionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (MajorVersion != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinorVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DbmsName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DbmsName);
      }
      if (VersionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VersionName);
      }
      if (MajorVersion != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinorVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DbmsName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DbmsName);
      }
      if (VersionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (MajorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (MinorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinorVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DbmsVersionResponse other) {
      if (other == null) {
        return;
      }
      if (other.DbmsName.Length != 0) {
        DbmsName = other.DbmsName;
      }
      if (other.VersionName.Length != 0) {
        VersionName = other.VersionName;
      }
      if (other.MajorVersion != 0) {
        MajorVersion = other.MajorVersion;
      }
      if (other.MinorVersion != 0) {
        MinorVersion = other.MinorVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DbmsName = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 24: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 32: {
            MinorVersion = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DbmsName = input.ReadString();
            break;
          }
          case 18: {
            VersionName = input.ReadString();
            break;
          }
          case 24: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 32: {
            MinorVersion = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The default namespace 
  /// </summary>
  public sealed partial class DefaultNamespaceResponse : pb::IMessage<DefaultNamespaceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DefaultNamespaceResponse> _parser = new pb::MessageParser<DefaultNamespaceResponse>(() => new DefaultNamespaceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DefaultNamespaceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultNamespaceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultNamespaceResponse(DefaultNamespaceResponse other) : this() {
      defaultNamespace_ = other.defaultNamespace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultNamespaceResponse Clone() {
      return new DefaultNamespaceResponse(this);
    }

    /// <summary>Field number for the "default_namespace" field.</summary>
    public const int DefaultNamespaceFieldNumber = 1;
    private string defaultNamespace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultNamespace {
      get { return defaultNamespace_; }
      set {
        defaultNamespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DefaultNamespaceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DefaultNamespaceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefaultNamespace != other.DefaultNamespace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DefaultNamespace.Length != 0) hash ^= DefaultNamespace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DefaultNamespace.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DefaultNamespace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DefaultNamespace.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DefaultNamespace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DefaultNamespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultNamespace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DefaultNamespaceResponse other) {
      if (other == null) {
        return;
      }
      if (other.DefaultNamespace.Length != 0) {
        DefaultNamespace = other.DefaultNamespace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DefaultNamespace = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DefaultNamespace = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The TableTypesResponse message conveys information about the various table types present in the system.
  /// </summary>
  public sealed partial class TableTypesResponse : pb::IMessage<TableTypesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TableTypesResponse> _parser = new pb::MessageParser<TableTypesResponse>(() => new TableTypesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableTypesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableTypesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableTypesResponse(TableTypesResponse other) : this() {
      tableTypes_ = other.tableTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableTypesResponse Clone() {
      return new TableTypesResponse(this);
    }

    /// <summary>Field number for the "table_types" field.</summary>
    public const int TableTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Polypheny.Prism.TableType> _repeated_tableTypes_codec
        = pb::FieldCodec.ForMessage(10, global::Polypheny.Prism.TableType.Parser);
    private readonly pbc::RepeatedField<global::Polypheny.Prism.TableType> tableTypes_ = new pbc::RepeatedField<global::Polypheny.Prism.TableType>();
    /// <summary>
    /// A list of TableType objects detailing each table type present in the system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Polypheny.Prism.TableType> TableTypes {
      get { return tableTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableTypesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableTypesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tableTypes_.Equals(other.tableTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tableTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      tableTypes_.WriteTo(output, _repeated_tableTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tableTypes_.WriteTo(ref output, _repeated_tableTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tableTypes_.CalculateSize(_repeated_tableTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableTypesResponse other) {
      if (other == null) {
        return;
      }
      tableTypes_.Add(other.tableTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tableTypes_.AddEntriesFrom(input, _repeated_tableTypes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tableTypes_.AddEntriesFrom(ref input, _repeated_tableTypes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The TableType message delineates the nature or category of a table.
  /// </summary>
  public sealed partial class TableType : pb::IMessage<TableType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TableType> _parser = new pb::MessageParser<TableType>(() => new TableType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableType(TableType other) : this() {
      tableType_ = other.tableType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableType Clone() {
      return new TableType(this);
    }

    /// <summary>Field number for the "table_type" field.</summary>
    public const int TableType_FieldNumber = 1;
    private string tableType_ = "";
    /// <summary>
    /// A descriptor denoting the type or category of a table, such as “BASE TABLE”, “VIEW”, or any other classification present in the system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableType_ {
      get { return tableType_; }
      set {
        tableType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableType_ != other.TableType_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableType_.Length != 0) hash ^= TableType_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableType_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableType_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableType_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableType_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableType_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableType_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableType other) {
      if (other == null) {
        return;
      }
      if (other.TableType_.Length != 0) {
        TableType_ = other.TableType_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableType_ = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TableType_ = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The TypesResponse message provides a list of native data types supported by the system.
  /// </summary>
  public sealed partial class TypesResponse : pb::IMessage<TypesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TypesResponse> _parser = new pb::MessageParser<TypesResponse>(() => new TypesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypesResponse(TypesResponse other) : this() {
      types_ = other.types_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypesResponse Clone() {
      return new TypesResponse(this);
    }

    /// <summary>Field number for the "types" field.</summary>
    public const int Types_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Polypheny.Prism.Type> _repeated_types_codec
        = pb::FieldCodec.ForMessage(10, global::Polypheny.Prism.Type.Parser);
    private readonly pbc::RepeatedField<global::Polypheny.Prism.Type> types_ = new pbc::RepeatedField<global::Polypheny.Prism.Type>();
    /// <summary>
    /// A list of Type objects detailing each native data type supported by the system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Polypheny.Prism.Type> Types_ {
      get { return types_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!types_.Equals(other.types_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= types_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      types_.WriteTo(output, _repeated_types_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      types_.WriteTo(ref output, _repeated_types_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += types_.CalculateSize(_repeated_types_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypesResponse other) {
      if (other == null) {
        return;
      }
      types_.Add(other.types_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            types_.AddEntriesFrom(input, _repeated_types_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            types_.AddEntriesFrom(ref input, _repeated_types_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The Type message describes the characteristics and specifications of a particular native data type.
  /// </summary>
  public sealed partial class Type : pb::IMessage<Type>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Type> _parser = new pb::MessageParser<Type>(() => new Type());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Type> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Type() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Type(Type other) : this() {
      typeName_ = other.typeName_;
      precision_ = other.precision_;
      literalPrefix_ = other.literalPrefix_;
      literalSuffix_ = other.literalSuffix_;
      isCaseSensitive_ = other.isCaseSensitive_;
      isSearchable_ = other.isSearchable_;
      isAutoIncrement_ = other.isAutoIncrement_;
      minScale_ = other.minScale_;
      maxScale_ = other.maxScale_;
      radix_ = other.radix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Type Clone() {
      return new Type(this);
    }

    /// <summary>Field number for the "type_name" field.</summary>
    public const int TypeNameFieldNumber = 1;
    private string typeName_ = "";
    /// <summary>
    /// The name of the data type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeName {
      get { return typeName_; }
      set {
        typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "precision" field.</summary>
    public const int PrecisionFieldNumber = 2;
    private int precision_;
    /// <summary>
    /// The number of total digits for numeric types or the maximum length for string and binary types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Precision {
      get { return precision_; }
      set {
        precision_ = value;
      }
    }

    /// <summary>Field number for the "literal_prefix" field.</summary>
    public const int LiteralPrefixFieldNumber = 3;
    private string literalPrefix_;
    /// <summary>
    /// The character(s) used to prefix a literal of this type (e.g., a single quote for strings).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LiteralPrefix {
      get { return literalPrefix_ ?? ""; }
      set {
        literalPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "literal_prefix" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLiteralPrefix {
      get { return literalPrefix_ != null; }
    }
    /// <summary>Clears the value of the "literal_prefix" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLiteralPrefix() {
      literalPrefix_ = null;
    }

    /// <summary>Field number for the "literal_suffix" field.</summary>
    public const int LiteralSuffixFieldNumber = 4;
    private string literalSuffix_;
    /// <summary>
    /// The character(s) used to suffix a literal of this type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LiteralSuffix {
      get { return literalSuffix_ ?? ""; }
      set {
        literalSuffix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "literal_suffix" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLiteralSuffix {
      get { return literalSuffix_ != null; }
    }
    /// <summary>Clears the value of the "literal_suffix" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLiteralSuffix() {
      literalSuffix_ = null;
    }

    /// <summary>Field number for the "is_case_sensitive" field.</summary>
    public const int IsCaseSensitiveFieldNumber = 5;
    private bool isCaseSensitive_;
    /// <summary>
    /// Indicates whether the data type is case sensitive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCaseSensitive {
      get { return isCaseSensitive_; }
      set {
        isCaseSensitive_ = value;
      }
    }

    /// <summary>Field number for the "is_searchable" field.</summary>
    public const int IsSearchableFieldNumber = 6;
    private int isSearchable_;
    /// <summary>
    /// Indicates how the data type can be used in WHERE clauses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsSearchable {
      get { return isSearchable_; }
      set {
        isSearchable_ = value;
      }
    }

    /// <summary>Field number for the "is_auto_increment" field.</summary>
    public const int IsAutoIncrementFieldNumber = 7;
    private bool isAutoIncrement_;
    /// <summary>
    /// Indicates whether columns of this data type auto-increment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAutoIncrement {
      get { return isAutoIncrement_; }
      set {
        isAutoIncrement_ = value;
      }
    }

    /// <summary>Field number for the "min_scale" field.</summary>
    public const int MinScaleFieldNumber = 8;
    private int minScale_;
    /// <summary>
    /// The minimum scale for this data type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinScale {
      get { return minScale_; }
      set {
        minScale_ = value;
      }
    }

    /// <summary>Field number for the "max_scale" field.</summary>
    public const int MaxScaleFieldNumber = 9;
    private int maxScale_;
    /// <summary>
    /// The maximum scale for this data type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxScale {
      get { return maxScale_; }
      set {
        maxScale_ = value;
      }
    }

    /// <summary>Field number for the "radix" field.</summary>
    public const int RadixFieldNumber = 10;
    private int radix_;
    /// <summary>
    /// The base number used in representing numeric values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Radix {
      get { return radix_; }
      set {
        radix_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Type);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Type other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeName != other.TypeName) return false;
      if (Precision != other.Precision) return false;
      if (LiteralPrefix != other.LiteralPrefix) return false;
      if (LiteralSuffix != other.LiteralSuffix) return false;
      if (IsCaseSensitive != other.IsCaseSensitive) return false;
      if (IsSearchable != other.IsSearchable) return false;
      if (IsAutoIncrement != other.IsAutoIncrement) return false;
      if (MinScale != other.MinScale) return false;
      if (MaxScale != other.MaxScale) return false;
      if (Radix != other.Radix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
      if (Precision != 0) hash ^= Precision.GetHashCode();
      if (HasLiteralPrefix) hash ^= LiteralPrefix.GetHashCode();
      if (HasLiteralSuffix) hash ^= LiteralSuffix.GetHashCode();
      if (IsCaseSensitive != false) hash ^= IsCaseSensitive.GetHashCode();
      if (IsSearchable != 0) hash ^= IsSearchable.GetHashCode();
      if (IsAutoIncrement != false) hash ^= IsAutoIncrement.GetHashCode();
      if (MinScale != 0) hash ^= MinScale.GetHashCode();
      if (MaxScale != 0) hash ^= MaxScale.GetHashCode();
      if (Radix != 0) hash ^= Radix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TypeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TypeName);
      }
      if (Precision != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Precision);
      }
      if (HasLiteralPrefix) {
        output.WriteRawTag(26);
        output.WriteString(LiteralPrefix);
      }
      if (HasLiteralSuffix) {
        output.WriteRawTag(34);
        output.WriteString(LiteralSuffix);
      }
      if (IsCaseSensitive != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsCaseSensitive);
      }
      if (IsSearchable != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(IsSearchable);
      }
      if (IsAutoIncrement != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsAutoIncrement);
      }
      if (MinScale != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MinScale);
      }
      if (MaxScale != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxScale);
      }
      if (Radix != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Radix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TypeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TypeName);
      }
      if (Precision != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Precision);
      }
      if (HasLiteralPrefix) {
        output.WriteRawTag(26);
        output.WriteString(LiteralPrefix);
      }
      if (HasLiteralSuffix) {
        output.WriteRawTag(34);
        output.WriteString(LiteralSuffix);
      }
      if (IsCaseSensitive != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsCaseSensitive);
      }
      if (IsSearchable != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(IsSearchable);
      }
      if (IsAutoIncrement != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsAutoIncrement);
      }
      if (MinScale != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MinScale);
      }
      if (MaxScale != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxScale);
      }
      if (Radix != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Radix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
      }
      if (Precision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Precision);
      }
      if (HasLiteralPrefix) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LiteralPrefix);
      }
      if (HasLiteralSuffix) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LiteralSuffix);
      }
      if (IsCaseSensitive != false) {
        size += 1 + 1;
      }
      if (IsSearchable != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsSearchable);
      }
      if (IsAutoIncrement != false) {
        size += 1 + 1;
      }
      if (MinScale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinScale);
      }
      if (MaxScale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxScale);
      }
      if (Radix != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Radix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Type other) {
      if (other == null) {
        return;
      }
      if (other.TypeName.Length != 0) {
        TypeName = other.TypeName;
      }
      if (other.Precision != 0) {
        Precision = other.Precision;
      }
      if (other.HasLiteralPrefix) {
        LiteralPrefix = other.LiteralPrefix;
      }
      if (other.HasLiteralSuffix) {
        LiteralSuffix = other.LiteralSuffix;
      }
      if (other.IsCaseSensitive != false) {
        IsCaseSensitive = other.IsCaseSensitive;
      }
      if (other.IsSearchable != 0) {
        IsSearchable = other.IsSearchable;
      }
      if (other.IsAutoIncrement != false) {
        IsAutoIncrement = other.IsAutoIncrement;
      }
      if (other.MinScale != 0) {
        MinScale = other.MinScale;
      }
      if (other.MaxScale != 0) {
        MaxScale = other.MaxScale;
      }
      if (other.Radix != 0) {
        Radix = other.Radix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TypeName = input.ReadString();
            break;
          }
          case 16: {
            Precision = input.ReadInt32();
            break;
          }
          case 26: {
            LiteralPrefix = input.ReadString();
            break;
          }
          case 34: {
            LiteralSuffix = input.ReadString();
            break;
          }
          case 40: {
            IsCaseSensitive = input.ReadBool();
            break;
          }
          case 48: {
            IsSearchable = input.ReadInt32();
            break;
          }
          case 56: {
            IsAutoIncrement = input.ReadBool();
            break;
          }
          case 64: {
            MinScale = input.ReadInt32();
            break;
          }
          case 72: {
            MaxScale = input.ReadInt32();
            break;
          }
          case 80: {
            Radix = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TypeName = input.ReadString();
            break;
          }
          case 16: {
            Precision = input.ReadInt32();
            break;
          }
          case 26: {
            LiteralPrefix = input.ReadString();
            break;
          }
          case 34: {
            LiteralSuffix = input.ReadString();
            break;
          }
          case 40: {
            IsCaseSensitive = input.ReadBool();
            break;
          }
          case 48: {
            IsSearchable = input.ReadInt32();
            break;
          }
          case 56: {
            IsAutoIncrement = input.ReadBool();
            break;
          }
          case 64: {
            MinScale = input.ReadInt32();
            break;
          }
          case 72: {
            MaxScale = input.ReadInt32();
            break;
          }
          case 80: {
            Radix = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The UserDefinedType message encapsulates details about a specific user-defined data type.
  /// </summary>
  public sealed partial class UserDefinedType : pb::IMessage<UserDefinedType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserDefinedType> _parser = new pb::MessageParser<UserDefinedType>(() => new UserDefinedType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserDefinedType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDefinedType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDefinedType(UserDefinedType other) : this() {
      typeName_ = other.typeName_;
      valueMetas_ = other.valueMetas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDefinedType Clone() {
      return new UserDefinedType(this);
    }

    /// <summary>Field number for the "type_name" field.</summary>
    public const int TypeNameFieldNumber = 1;
    private string typeName_ = "";
    /// <summary>
    /// The name of the user-defined data type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeName {
      get { return typeName_; }
      set {
        typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value_metas" field.</summary>
    public const int ValueMetasFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Polypheny.Prism.ValueMeta> _repeated_valueMetas_codec
        = pb::FieldCodec.ForMessage(18, global::Polypheny.Prism.ValueMeta.Parser);
    private readonly pbc::RepeatedField<global::Polypheny.Prism.ValueMeta> valueMetas_ = new pbc::RepeatedField<global::Polypheny.Prism.ValueMeta>();
    /// <summary>
    /// A list of ValueMeta objects detailing the metadata associated with fields of this data type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Polypheny.Prism.ValueMeta> ValueMetas {
      get { return valueMetas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserDefinedType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserDefinedType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeName != other.TypeName) return false;
      if(!valueMetas_.Equals(other.valueMetas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
      hash ^= valueMetas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TypeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TypeName);
      }
      valueMetas_.WriteTo(output, _repeated_valueMetas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TypeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TypeName);
      }
      valueMetas_.WriteTo(ref output, _repeated_valueMetas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
      }
      size += valueMetas_.CalculateSize(_repeated_valueMetas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserDefinedType other) {
      if (other == null) {
        return;
      }
      if (other.TypeName.Length != 0) {
        TypeName = other.TypeName;
      }
      valueMetas_.Add(other.valueMetas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TypeName = input.ReadString();
            break;
          }
          case 18: {
            valueMetas_.AddEntriesFrom(input, _repeated_valueMetas_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TypeName = input.ReadString();
            break;
          }
          case 18: {
            valueMetas_.AddEntriesFrom(ref input, _repeated_valueMetas_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The ValueMeta message offers insights into the metadata of a specific field related to a user-defined type.
  /// </summary>
  public sealed partial class ValueMeta : pb::IMessage<ValueMeta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValueMeta> _parser = new pb::MessageParser<ValueMeta>(() => new ValueMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValueMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueMeta(ValueMeta other) : this() {
      valueName_ = other.valueName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueMeta Clone() {
      return new ValueMeta(this);
    }

    /// <summary>Field number for the "value_name" field.</summary>
    public const int ValueNameFieldNumber = 1;
    private string valueName_ = "";
    /// <summary>
    /// The name or descriptor of the value’s metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueName {
      get { return valueName_; }
      set {
        valueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValueMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValueMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValueName != other.ValueName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ValueName.Length != 0) hash ^= ValueName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ValueName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ValueName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ValueName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ValueName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ValueName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValueMeta other) {
      if (other == null) {
        return;
      }
      if (other.ValueName.Length != 0) {
        ValueName = other.ValueName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ValueName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ValueName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The MetaStringResponse message encapsulates a string that represents some specific metadata information.
  /// </summary>
  public sealed partial class MetaStringResponse : pb::IMessage<MetaStringResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetaStringResponse> _parser = new pb::MessageParser<MetaStringResponse>(() => new MetaStringResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetaStringResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetaStringResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetaStringResponse(MetaStringResponse other) : this() {
      string_ = other.string_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetaStringResponse Clone() {
      return new MetaStringResponse(this);
    }

    /// <summary>Field number for the "string" field.</summary>
    public const int StringFieldNumber = 1;
    private string string_ = "";
    /// <summary>
    /// A string representing the requested metadata information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string String {
      get { return string_; }
      set {
        string_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetaStringResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetaStringResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (String != other.String) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (String.Length != 0) hash ^= String.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (String.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(String);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (String.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(String);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (String.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(String);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetaStringResponse other) {
      if (other == null) {
        return;
      }
      if (other.String.Length != 0) {
        String = other.String;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            String = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            String = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The ProceduresResponse message provides a list of stored procedures available within the system.
  /// </summary>
  public sealed partial class ProceduresResponse : pb::IMessage<ProceduresResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProceduresResponse> _parser = new pb::MessageParser<ProceduresResponse>(() => new ProceduresResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProceduresResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProceduresResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProceduresResponse(ProceduresResponse other) : this() {
      procedures_ = other.procedures_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProceduresResponse Clone() {
      return new ProceduresResponse(this);
    }

    /// <summary>Field number for the "procedures" field.</summary>
    public const int ProceduresFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Polypheny.Prism.Procedure> _repeated_procedures_codec
        = pb::FieldCodec.ForMessage(10, global::Polypheny.Prism.Procedure.Parser);
    private readonly pbc::RepeatedField<global::Polypheny.Prism.Procedure> procedures_ = new pbc::RepeatedField<global::Polypheny.Prism.Procedure>();
    /// <summary>
    /// A list of Procedure objects detailing each stored procedure present in the system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Polypheny.Prism.Procedure> Procedures {
      get { return procedures_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProceduresResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProceduresResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!procedures_.Equals(other.procedures_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= procedures_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      procedures_.WriteTo(output, _repeated_procedures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      procedures_.WriteTo(ref output, _repeated_procedures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += procedures_.CalculateSize(_repeated_procedures_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProceduresResponse other) {
      if (other == null) {
        return;
      }
      procedures_.Add(other.procedures_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            procedures_.AddEntriesFrom(input, _repeated_procedures_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            procedures_.AddEntriesFrom(ref input, _repeated_procedures_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The Procedure message encapsulates details about a specific stored procedure in the system.
  /// </summary>
  public sealed partial class Procedure : pb::IMessage<Procedure>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Procedure> _parser = new pb::MessageParser<Procedure>(() => new Procedure());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Procedure> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Procedure() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Procedure(Procedure other) : this() {
      trivialName_ = other.trivialName_;
      inputParameters_ = other.inputParameters_;
      description_ = other.description_;
      returnType_ = other.returnType_;
      uniqueName_ = other.uniqueName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Procedure Clone() {
      return new Procedure(this);
    }

    /// <summary>Field number for the "trivial_name" field.</summary>
    public const int TrivialNameFieldNumber = 1;
    private string trivialName_ = "";
    /// <summary>
    /// The simple name of the procedure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrivialName {
      get { return trivialName_; }
      set {
        trivialName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input_parameters" field.</summary>
    public const int InputParametersFieldNumber = 2;
    private string inputParameters_ = "";
    /// <summary>
    /// The input parameters required by the procedure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputParameters {
      get { return inputParameters_; }
      set {
        inputParameters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// A brief description or purpose of the procedure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "return_type" field.</summary>
    public const int ReturnTypeFieldNumber = 4;
    private global::Polypheny.Prism.Procedure.Types.ReturnType returnType_ = global::Polypheny.Prism.Procedure.Types.ReturnType.Unspecified;
    /// <summary>
    /// Enum indicating the return type of the procedure. It can be unspecified, unknown, no result, or result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.Procedure.Types.ReturnType ReturnType {
      get { return returnType_; }
      set {
        returnType_ = value;
      }
    }

    /// <summary>Field number for the "unique_name" field.</summary>
    public const int UniqueNameFieldNumber = 5;
    private string uniqueName_ = "";
    /// <summary>
    /// A unique name or identifier for the procedure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueName {
      get { return uniqueName_; }
      set {
        uniqueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Procedure);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Procedure other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TrivialName != other.TrivialName) return false;
      if (InputParameters != other.InputParameters) return false;
      if (Description != other.Description) return false;
      if (ReturnType != other.ReturnType) return false;
      if (UniqueName != other.UniqueName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TrivialName.Length != 0) hash ^= TrivialName.GetHashCode();
      if (InputParameters.Length != 0) hash ^= InputParameters.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (ReturnType != global::Polypheny.Prism.Procedure.Types.ReturnType.Unspecified) hash ^= ReturnType.GetHashCode();
      if (UniqueName.Length != 0) hash ^= UniqueName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TrivialName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrivialName);
      }
      if (InputParameters.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InputParameters);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (ReturnType != global::Polypheny.Prism.Procedure.Types.ReturnType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ReturnType);
      }
      if (UniqueName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UniqueName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TrivialName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrivialName);
      }
      if (InputParameters.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InputParameters);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (ReturnType != global::Polypheny.Prism.Procedure.Types.ReturnType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ReturnType);
      }
      if (UniqueName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UniqueName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TrivialName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrivialName);
      }
      if (InputParameters.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputParameters);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (ReturnType != global::Polypheny.Prism.Procedure.Types.ReturnType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnType);
      }
      if (UniqueName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Procedure other) {
      if (other == null) {
        return;
      }
      if (other.TrivialName.Length != 0) {
        TrivialName = other.TrivialName;
      }
      if (other.InputParameters.Length != 0) {
        InputParameters = other.InputParameters;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.ReturnType != global::Polypheny.Prism.Procedure.Types.ReturnType.Unspecified) {
        ReturnType = other.ReturnType;
      }
      if (other.UniqueName.Length != 0) {
        UniqueName = other.UniqueName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TrivialName = input.ReadString();
            break;
          }
          case 18: {
            InputParameters = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            ReturnType = (global::Polypheny.Prism.Procedure.Types.ReturnType) input.ReadEnum();
            break;
          }
          case 42: {
            UniqueName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TrivialName = input.ReadString();
            break;
          }
          case 18: {
            InputParameters = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            ReturnType = (global::Polypheny.Prism.Procedure.Types.ReturnType) input.ReadEnum();
            break;
          }
          case 42: {
            UniqueName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Procedure message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///
      ///The return type enum is part of the message Procedure and indicates the possible types of return values for a stored procedure.
      /// </summary>
      public enum ReturnType {
        /// <summary>
        /// Indicates that the return type is unspecified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Indicates that the return type is unknown.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 1,
        /// <summary>
        /// The procedure does not return a result.
        /// </summary>
        [pbr::OriginalName("NO_RESULT")] NoResult = 2,
        /// <summary>
        /// The procedure returns a result.
        /// </summary>
        [pbr::OriginalName("RESULT")] Result = 3,
      }

    }
    #endregion

  }

  /// <summary>
  ///
  ///The ClientInfoProperties message encapsulates key-value pairs representing client-specific information.
  /// </summary>
  public sealed partial class ClientInfoProperties : pb::IMessage<ClientInfoProperties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientInfoProperties> _parser = new pb::MessageParser<ClientInfoProperties>(() => new ClientInfoProperties());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientInfoProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoProperties(ClientInfoProperties other) : this() {
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoProperties Clone() {
      return new ClientInfoProperties(this);
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    /// <summary>
    /// A mapping of property names to their corresponding values, providing insights or settings related to the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientInfoProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientInfoProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      properties_.WriteTo(ref output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientInfoProperties other) {
      if (other == null) {
        return;
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            properties_.AddEntriesFrom(ref input, _map_properties_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The ClientInfoPropertyResponse message provides metadata about various client-specific properties.
  /// </summary>
  public sealed partial class ClientInfoPropertiesResponse : pb::IMessage<ClientInfoPropertiesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientInfoPropertiesResponse> _parser = new pb::MessageParser<ClientInfoPropertiesResponse>(() => new ClientInfoPropertiesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientInfoPropertiesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoPropertiesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoPropertiesResponse(ClientInfoPropertiesResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoPropertiesResponse Clone() {
      return new ClientInfoPropertiesResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientInfoPropertiesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientInfoPropertiesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientInfoPropertiesResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The ClientInfoPropertyMetaResponse message provides metadata about various client-specific properties.
  /// </summary>
  public sealed partial class ClientInfoPropertyMetaResponse : pb::IMessage<ClientInfoPropertyMetaResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientInfoPropertyMetaResponse> _parser = new pb::MessageParser<ClientInfoPropertyMetaResponse>(() => new ClientInfoPropertyMetaResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientInfoPropertyMetaResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoPropertyMetaResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoPropertyMetaResponse(ClientInfoPropertyMetaResponse other) : this() {
      clientInfoPropertyMetas_ = other.clientInfoPropertyMetas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoPropertyMetaResponse Clone() {
      return new ClientInfoPropertyMetaResponse(this);
    }

    /// <summary>Field number for the "client_info_property_metas" field.</summary>
    public const int ClientInfoPropertyMetasFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Polypheny.Prism.ClientInfoPropertyMeta> _repeated_clientInfoPropertyMetas_codec
        = pb::FieldCodec.ForMessage(10, global::Polypheny.Prism.ClientInfoPropertyMeta.Parser);
    private readonly pbc::RepeatedField<global::Polypheny.Prism.ClientInfoPropertyMeta> clientInfoPropertyMetas_ = new pbc::RepeatedField<global::Polypheny.Prism.ClientInfoPropertyMeta>();
    /// <summary>
    /// A list of ClientInfoPropertyMeta objects detailing metadata for each client-specific property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Polypheny.Prism.ClientInfoPropertyMeta> ClientInfoPropertyMetas {
      get { return clientInfoPropertyMetas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientInfoPropertyMetaResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientInfoPropertyMetaResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clientInfoPropertyMetas_.Equals(other.clientInfoPropertyMetas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clientInfoPropertyMetas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      clientInfoPropertyMetas_.WriteTo(output, _repeated_clientInfoPropertyMetas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      clientInfoPropertyMetas_.WriteTo(ref output, _repeated_clientInfoPropertyMetas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += clientInfoPropertyMetas_.CalculateSize(_repeated_clientInfoPropertyMetas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientInfoPropertyMetaResponse other) {
      if (other == null) {
        return;
      }
      clientInfoPropertyMetas_.Add(other.clientInfoPropertyMetas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            clientInfoPropertyMetas_.AddEntriesFrom(input, _repeated_clientInfoPropertyMetas_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            clientInfoPropertyMetas_.AddEntriesFrom(ref input, _repeated_clientInfoPropertyMetas_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The ClientInfoPropertyMeta message encapsulates metadata about a specific client property.
  /// </summary>
  public sealed partial class ClientInfoPropertyMeta : pb::IMessage<ClientInfoPropertyMeta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientInfoPropertyMeta> _parser = new pb::MessageParser<ClientInfoPropertyMeta>(() => new ClientInfoPropertyMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientInfoPropertyMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoPropertyMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoPropertyMeta(ClientInfoPropertyMeta other) : this() {
      key_ = other.key_;
      defaultValue_ = other.defaultValue_;
      maxlength_ = other.maxlength_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientInfoPropertyMeta Clone() {
      return new ClientInfoPropertyMeta(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// The unique key identifier for the client property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "default_value" field.</summary>
    public const int DefaultValueFieldNumber = 2;
    private string defaultValue_ = "";
    /// <summary>
    /// The default value of the property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultValue {
      get { return defaultValue_; }
      set {
        defaultValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxlength" field.</summary>
    public const int MaxlengthFieldNumber = 3;
    private int maxlength_;
    /// <summary>
    /// Maximum length of the property value. Useful for validation purposes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Maxlength {
      get { return maxlength_; }
      set {
        maxlength_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// A brief description explaining the purpose or usage of the property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientInfoPropertyMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientInfoPropertyMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (DefaultValue != other.DefaultValue) return false;
      if (Maxlength != other.Maxlength) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (DefaultValue.Length != 0) hash ^= DefaultValue.GetHashCode();
      if (Maxlength != 0) hash ^= Maxlength.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (DefaultValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DefaultValue);
      }
      if (Maxlength != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Maxlength);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (DefaultValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DefaultValue);
      }
      if (Maxlength != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Maxlength);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (DefaultValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultValue);
      }
      if (Maxlength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Maxlength);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientInfoPropertyMeta other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.DefaultValue.Length != 0) {
        DefaultValue = other.DefaultValue;
      }
      if (other.Maxlength != 0) {
        Maxlength = other.Maxlength;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            DefaultValue = input.ReadString();
            break;
          }
          case 24: {
            Maxlength = input.ReadInt32();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            DefaultValue = input.ReadString();
            break;
          }
          case 24: {
            Maxlength = input.ReadInt32();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The FunctionsResponse message provides a list of functions available within the system.
  /// </summary>
  public sealed partial class FunctionsResponse : pb::IMessage<FunctionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FunctionsResponse> _parser = new pb::MessageParser<FunctionsResponse>(() => new FunctionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FunctionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionsResponse(FunctionsResponse other) : this() {
      functions_ = other.functions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionsResponse Clone() {
      return new FunctionsResponse(this);
    }

    /// <summary>Field number for the "functions" field.</summary>
    public const int FunctionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Polypheny.Prism.Function> _repeated_functions_codec
        = pb::FieldCodec.ForMessage(10, global::Polypheny.Prism.Function.Parser);
    private readonly pbc::RepeatedField<global::Polypheny.Prism.Function> functions_ = new pbc::RepeatedField<global::Polypheny.Prism.Function>();
    /// <summary>
    /// A list of Function objects detailing each function present in the system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Polypheny.Prism.Function> Functions {
      get { return functions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FunctionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FunctionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!functions_.Equals(other.functions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= functions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      functions_.WriteTo(output, _repeated_functions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      functions_.WriteTo(ref output, _repeated_functions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += functions_.CalculateSize(_repeated_functions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FunctionsResponse other) {
      if (other == null) {
        return;
      }
      functions_.Add(other.functions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            functions_.AddEntriesFrom(input, _repeated_functions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            functions_.AddEntriesFrom(ref input, _repeated_functions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///The Function message encapsulates details about a specific function in the system.
  /// </summary>
  public sealed partial class Function : pb::IMessage<Function>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Function> _parser = new pb::MessageParser<Function>(() => new Function());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Function> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.MetaResponsesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Function() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Function(Function other) : this() {
      name_ = other.name_;
      syntax_ = other.syntax_;
      functionCategory_ = other.functionCategory_;
      isTableFunction_ = other.isTableFunction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Function Clone() {
      return new Function(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "syntax" field.</summary>
    public const int SyntaxFieldNumber = 2;
    private string syntax_ = "";
    /// <summary>
    /// The expected syntax for using the function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Syntax {
      get { return syntax_; }
      set {
        syntax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "function_category" field.</summary>
    public const int FunctionCategoryFieldNumber = 3;
    private string functionCategory_ = "";
    /// <summary>
    /// The category to which the function belongs. Helps in categorizing functions for better management and understanding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionCategory {
      get { return functionCategory_; }
      set {
        functionCategory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_table_function" field.</summary>
    public const int IsTableFunctionFieldNumber = 4;
    private bool isTableFunction_;
    /// <summary>
    /// Indicates whether the function is a table function. If true, it means the function returns a table; otherwise, it returns a scalar value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsTableFunction {
      get { return isTableFunction_; }
      set {
        isTableFunction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Function);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Function other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Syntax != other.Syntax) return false;
      if (FunctionCategory != other.FunctionCategory) return false;
      if (IsTableFunction != other.IsTableFunction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Syntax.Length != 0) hash ^= Syntax.GetHashCode();
      if (FunctionCategory.Length != 0) hash ^= FunctionCategory.GetHashCode();
      if (IsTableFunction != false) hash ^= IsTableFunction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Syntax.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Syntax);
      }
      if (FunctionCategory.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FunctionCategory);
      }
      if (IsTableFunction != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsTableFunction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Syntax.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Syntax);
      }
      if (FunctionCategory.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FunctionCategory);
      }
      if (IsTableFunction != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsTableFunction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Syntax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Syntax);
      }
      if (FunctionCategory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionCategory);
      }
      if (IsTableFunction != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Function other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Syntax.Length != 0) {
        Syntax = other.Syntax;
      }
      if (other.FunctionCategory.Length != 0) {
        FunctionCategory = other.FunctionCategory;
      }
      if (other.IsTableFunction != false) {
        IsTableFunction = other.IsTableFunction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Syntax = input.ReadString();
            break;
          }
          case 26: {
            FunctionCategory = input.ReadString();
            break;
          }
          case 32: {
            IsTableFunction = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Syntax = input.ReadString();
            break;
          }
          case 26: {
            FunctionCategory = input.ReadString();
            break;
          }
          case 32: {
            IsTableFunction = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
