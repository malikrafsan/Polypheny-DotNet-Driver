// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: org/polypheny/prism/statement_responses.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Polypheny.Prism {

  /// <summary>Holder for reflection information generated from org/polypheny/prism/statement_responses.proto</summary>
  public static partial class StatementResponsesReflection {

    #region Descriptor
    /// <summary>File descriptor for org/polypheny/prism/statement_responses.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StatementResponsesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1vcmcvcG9seXBoZW55L3ByaXNtL3N0YXRlbWVudF9yZXNwb25zZXMucHJv",
            "dG8SE29yZy5wb2x5cGhlbnkucHJpc20aKm9yZy9wb2x5cGhlbnkvcHJpc20v",
            "cmVsYXRpb25hbF9mcmFtZS5wcm90bxolb3JnL3BvbHlwaGVueS9wcmlzbS9n",
            "cmFwaF9mcmFtZS5wcm90bxoob3JnL3BvbHlwaGVueS9wcmlzbS9kb2N1bWVu",
            "dF9mcmFtZS5wcm90byIVChNDbG9zZVJlc3VsdFJlc3BvbnNlIm8KEVN0YXRl",
            "bWVudFJlc3BvbnNlEhQKDHN0YXRlbWVudF9pZBgBIAEoBRI5CgZyZXN1bHQY",
            "AiABKAsyJC5vcmcucG9seXBoZW55LnByaXNtLlN0YXRlbWVudFJlc3VsdEgA",
            "iAEBQgkKB19yZXN1bHQiWwoPU3RhdGVtZW50UmVzdWx0Eg4KBnNjYWxhchgB",
            "IAEoAxIuCgVmcmFtZRgCIAEoCzIaLm9yZy5wb2x5cGhlbnkucHJpc20uRnJh",
            "bWVIAIgBAUIICgZfZnJhbWUiOwoWU3RhdGVtZW50QmF0Y2hSZXNwb25zZRIQ",
            "CghiYXRjaF9pZBgBIAEoBRIPCgdzY2FsYXJzGAIgAygDIm8KGlByZXBhcmVk",
            "U3RhdGVtZW50U2lnbmF0dXJlEhQKDHN0YXRlbWVudF9pZBgBIAEoBRI7Cg9w",
            "YXJhbWV0ZXJfbWV0YXMYAiADKAsyIi5vcmcucG9seXBoZW55LnByaXNtLlBh",
            "cmFtZXRlck1ldGEiggEKDVBhcmFtZXRlck1ldGESEQoJcHJlY2lzaW9uGAEg",
            "ASgFEg0KBXNjYWxlGAIgASgFEhEKCXR5cGVfbmFtZRgDIAEoCRIbCg5wYXJh",
            "bWV0ZXJfbmFtZRgEIAEoCUgAiAEBEgwKBG5hbWUYBSABKAlCEQoPX3BhcmFt",
            "ZXRlcl9uYW1lIhgKFkNsb3NlU3RhdGVtZW50UmVzcG9uc2Ui2gEKBUZyYW1l",
            "Eg8KB2lzX2xhc3QYASABKAgSQAoQcmVsYXRpb25hbF9mcmFtZRgCIAEoCzIk",
            "Lm9yZy5wb2x5cGhlbnkucHJpc20uUmVsYXRpb25hbEZyYW1lSAASNgoLZ3Jh",
            "cGhfZnJhbWUYAyABKAsyHy5vcmcucG9seXBoZW55LnByaXNtLkdyYXBoRnJh",
            "bWVIABI8Cg5kb2N1bWVudF9mcmFtZRgEIAEoCzIiLm9yZy5wb2x5cGhlbnku",
            "cHJpc20uRG9jdW1lbnRGcmFtZUgAQggKBnJlc3VsdEJYChNvcmcucG9seXBo",
            "ZW55LnByaXNtQhJTdGF0ZW1lbnRSZXNwb25zZXNQAVoZb3JnL3BvbHlwaGVu",
            "eS9wcmlzbTtwcmlzbaoCD1BvbHlwaGVueS5QcmlzbWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Polypheny.Prism.RelationalFrameReflection.Descriptor, global::Polypheny.Prism.GraphFrameReflection.Descriptor, global::Polypheny.Prism.DocumentFrameReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.CloseResultResponse), global::Polypheny.Prism.CloseResultResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.StatementResponse), global::Polypheny.Prism.StatementResponse.Parser, new[]{ "StatementId", "Result" }, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.StatementResult), global::Polypheny.Prism.StatementResult.Parser, new[]{ "Scalar", "Frame" }, new[]{ "Frame" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.StatementBatchResponse), global::Polypheny.Prism.StatementBatchResponse.Parser, new[]{ "BatchId", "Scalars" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.PreparedStatementSignature), global::Polypheny.Prism.PreparedStatementSignature.Parser, new[]{ "StatementId", "ParameterMetas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.ParameterMeta), global::Polypheny.Prism.ParameterMeta.Parser, new[]{ "Precision", "Scale", "TypeName", "ParameterName", "Name" }, new[]{ "ParameterName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.CloseStatementResponse), global::Polypheny.Prism.CloseStatementResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Polypheny.Prism.Frame), global::Polypheny.Prism.Frame.Parser, new[]{ "IsLast", "RelationalFrame", "GraphFrame", "DocumentFrame" }, new[]{ "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  ///Response of the server on the request of a client to close the result set of a specific statement.
  ///This message has no fields. It merely serves as an acknowledgement.
  /// </summary>
  public sealed partial class CloseResultResponse : pb::IMessage<CloseResultResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloseResultResponse> _parser = new pb::MessageParser<CloseResultResponse>(() => new CloseResultResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseResultResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.StatementResponsesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseResultResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseResultResponse(CloseResultResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseResultResponse Clone() {
      return new CloseResultResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseResultResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseResultResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseResultResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///Represents the response after executing a statement.
  ///This message contains the identifier of the executed statement and optionally, the result of the execution.
  ///The result can vary based on the type of statement executed, ranging from scalar values to complex data frames.
  /// </summary>
  public sealed partial class StatementResponse : pb::IMessage<StatementResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatementResponse> _parser = new pb::MessageParser<StatementResponse>(() => new StatementResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatementResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.StatementResponsesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatementResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatementResponse(StatementResponse other) : this() {
      statementId_ = other.statementId_;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatementResponse Clone() {
      return new StatementResponse(this);
    }

    /// <summary>Field number for the "statement_id" field.</summary>
    public const int StatementIdFieldNumber = 1;
    private int statementId_;
    /// <summary>
    /// The unique identifier of the executed statement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StatementId {
      get { return statementId_; }
      set {
        statementId_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Polypheny.Prism.StatementResult result_;
    /// <summary>
    ///
    ///(Optional) The result of the executed statement.
    ///This could be a scalar value or a data frame, depending on the type of statement executed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.StatementResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatementResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatementResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatementId != other.StatementId) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatementId != 0) hash ^= StatementId.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StatementId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StatementId);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StatementId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StatementId);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatementId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatementId);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatementResponse other) {
      if (other == null) {
        return;
      }
      if (other.StatementId != 0) {
        StatementId = other.StatementId;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Polypheny.Prism.StatementResult();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatementId = input.ReadInt32();
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::Polypheny.Prism.StatementResult();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StatementId = input.ReadInt32();
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::Polypheny.Prism.StatementResult();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///Encapsulates the result of an executed statement.
  ///This can include scalar values for simple queries or data frames for queries that return multiple rows or complex data.
  /// </summary>
  public sealed partial class StatementResult : pb::IMessage<StatementResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatementResult> _parser = new pb::MessageParser<StatementResult>(() => new StatementResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatementResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.StatementResponsesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatementResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatementResult(StatementResult other) : this() {
      scalar_ = other.scalar_;
      frame_ = other.frame_ != null ? other.frame_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatementResult Clone() {
      return new StatementResult(this);
    }

    /// <summary>Field number for the "scalar" field.</summary>
    public const int ScalarFieldNumber = 1;
    private long scalar_;
    /// <summary>
    /// A scalar result value, often used to represent the number of rows affected by an operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Scalar {
      get { return scalar_; }
      set {
        scalar_ = value;
      }
    }

    /// <summary>Field number for the "frame" field.</summary>
    public const int FrameFieldNumber = 2;
    private global::Polypheny.Prism.Frame frame_;
    /// <summary>
    /// (Optional) A frame of data, which could be a relational table, a graph, or a set of documents.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.Frame Frame {
      get { return frame_; }
      set {
        frame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatementResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatementResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Scalar != other.Scalar) return false;
      if (!object.Equals(Frame, other.Frame)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Scalar != 0L) hash ^= Scalar.GetHashCode();
      if (frame_ != null) hash ^= Frame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Scalar != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Scalar);
      }
      if (frame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Frame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Scalar != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Scalar);
      }
      if (frame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Frame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Scalar != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Scalar);
      }
      if (frame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Frame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatementResult other) {
      if (other == null) {
        return;
      }
      if (other.Scalar != 0L) {
        Scalar = other.Scalar;
      }
      if (other.frame_ != null) {
        if (frame_ == null) {
          Frame = new global::Polypheny.Prism.Frame();
        }
        Frame.MergeFrom(other.Frame);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Scalar = input.ReadInt64();
            break;
          }
          case 18: {
            if (frame_ == null) {
              Frame = new global::Polypheny.Prism.Frame();
            }
            input.ReadMessage(Frame);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Scalar = input.ReadInt64();
            break;
          }
          case 18: {
            if (frame_ == null) {
              Frame = new global::Polypheny.Prism.Frame();
            }
            input.ReadMessage(Frame);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///Represents the response after executing a batch of statements.
  ///This includes the batch identifier and a list of scalar results for each statement in the batch,
  ///typically representing the number of rows affected by each operation.
  /// </summary>
  public sealed partial class StatementBatchResponse : pb::IMessage<StatementBatchResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatementBatchResponse> _parser = new pb::MessageParser<StatementBatchResponse>(() => new StatementBatchResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatementBatchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.StatementResponsesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatementBatchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatementBatchResponse(StatementBatchResponse other) : this() {
      batchId_ = other.batchId_;
      scalars_ = other.scalars_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatementBatchResponse Clone() {
      return new StatementBatchResponse(this);
    }

    /// <summary>Field number for the "batch_id" field.</summary>
    public const int BatchIdFieldNumber = 1;
    private int batchId_;
    /// <summary>
    /// The unique identifier of the executed batch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BatchId {
      get { return batchId_; }
      set {
        batchId_ = value;
      }
    }

    /// <summary>Field number for the "scalars" field.</summary>
    public const int ScalarsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_scalars_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> scalars_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// List of scalar results for each statement in the batch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Scalars {
      get { return scalars_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatementBatchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatementBatchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BatchId != other.BatchId) return false;
      if(!scalars_.Equals(other.scalars_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BatchId != 0) hash ^= BatchId.GetHashCode();
      hash ^= scalars_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BatchId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BatchId);
      }
      scalars_.WriteTo(output, _repeated_scalars_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BatchId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BatchId);
      }
      scalars_.WriteTo(ref output, _repeated_scalars_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BatchId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatchId);
      }
      size += scalars_.CalculateSize(_repeated_scalars_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatementBatchResponse other) {
      if (other == null) {
        return;
      }
      if (other.BatchId != 0) {
        BatchId = other.BatchId;
      }
      scalars_.Add(other.scalars_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BatchId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            scalars_.AddEntriesFrom(input, _repeated_scalars_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BatchId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            scalars_.AddEntriesFrom(ref input, _repeated_scalars_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///Provides metadata about a prepared statement, including its parameters.
  ///This information is crucial for correctly binding parameters to the statement before execution.
  /// </summary>
  public sealed partial class PreparedStatementSignature : pb::IMessage<PreparedStatementSignature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PreparedStatementSignature> _parser = new pb::MessageParser<PreparedStatementSignature>(() => new PreparedStatementSignature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PreparedStatementSignature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.StatementResponsesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreparedStatementSignature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreparedStatementSignature(PreparedStatementSignature other) : this() {
      statementId_ = other.statementId_;
      parameterMetas_ = other.parameterMetas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreparedStatementSignature Clone() {
      return new PreparedStatementSignature(this);
    }

    /// <summary>Field number for the "statement_id" field.</summary>
    public const int StatementIdFieldNumber = 1;
    private int statementId_;
    /// <summary>
    /// The unique identifier of the prepared statement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StatementId {
      get { return statementId_; }
      set {
        statementId_ = value;
      }
    }

    /// <summary>Field number for the "parameter_metas" field.</summary>
    public const int ParameterMetasFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Polypheny.Prism.ParameterMeta> _repeated_parameterMetas_codec
        = pb::FieldCodec.ForMessage(18, global::Polypheny.Prism.ParameterMeta.Parser);
    private readonly pbc::RepeatedField<global::Polypheny.Prism.ParameterMeta> parameterMetas_ = new pbc::RepeatedField<global::Polypheny.Prism.ParameterMeta>();
    /// <summary>
    /// Metadata about each parameter required by the statement, detailing type, name, and other characteristics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Polypheny.Prism.ParameterMeta> ParameterMetas {
      get { return parameterMetas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PreparedStatementSignature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PreparedStatementSignature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatementId != other.StatementId) return false;
      if(!parameterMetas_.Equals(other.parameterMetas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatementId != 0) hash ^= StatementId.GetHashCode();
      hash ^= parameterMetas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StatementId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StatementId);
      }
      parameterMetas_.WriteTo(output, _repeated_parameterMetas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StatementId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StatementId);
      }
      parameterMetas_.WriteTo(ref output, _repeated_parameterMetas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatementId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatementId);
      }
      size += parameterMetas_.CalculateSize(_repeated_parameterMetas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PreparedStatementSignature other) {
      if (other == null) {
        return;
      }
      if (other.StatementId != 0) {
        StatementId = other.StatementId;
      }
      parameterMetas_.Add(other.parameterMetas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatementId = input.ReadInt32();
            break;
          }
          case 18: {
            parameterMetas_.AddEntriesFrom(input, _repeated_parameterMetas_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StatementId = input.ReadInt32();
            break;
          }
          case 18: {
            parameterMetas_.AddEntriesFrom(ref input, _repeated_parameterMetas_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///Provides metadata about a single parameter of a prepared statement.
  ///This includes details about the parameter's precision, scale, data type, and names.
  /// </summary>
  public sealed partial class ParameterMeta : pb::IMessage<ParameterMeta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ParameterMeta> _parser = new pb::MessageParser<ParameterMeta>(() => new ParameterMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParameterMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.StatementResponsesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterMeta(ParameterMeta other) : this() {
      precision_ = other.precision_;
      scale_ = other.scale_;
      typeName_ = other.typeName_;
      parameterName_ = other.parameterName_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterMeta Clone() {
      return new ParameterMeta(this);
    }

    /// <summary>Field number for the "precision" field.</summary>
    public const int PrecisionFieldNumber = 1;
    private int precision_;
    /// <summary>
    /// Precision of the parameter, typically used for numeric types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Precision {
      get { return precision_; }
      set {
        precision_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 2;
    private int scale_;
    /// <summary>
    /// Scale of the parameter, typically used for decimal types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "type_name" field.</summary>
    public const int TypeNameFieldNumber = 3;
    private string typeName_ = "";
    /// <summary>
    /// The data type of the parameter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeName {
      get { return typeName_; }
      set {
        typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameter_name" field.</summary>
    public const int ParameterNameFieldNumber = 4;
    private string parameterName_;
    /// <summary>
    /// (Optional) The name of the placeholder specified for this value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParameterName {
      get { return parameterName_ ?? ""; }
      set {
        parameterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "parameter_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasParameterName {
      get { return parameterName_ != null; }
    }
    /// <summary>Clears the value of the "parameter_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParameterName() {
      parameterName_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The name of the parameter, if specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParameterMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParameterMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Precision != other.Precision) return false;
      if (Scale != other.Scale) return false;
      if (TypeName != other.TypeName) return false;
      if (ParameterName != other.ParameterName) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Precision != 0) hash ^= Precision.GetHashCode();
      if (Scale != 0) hash ^= Scale.GetHashCode();
      if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
      if (HasParameterName) hash ^= ParameterName.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Precision != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Precision);
      }
      if (Scale != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Scale);
      }
      if (TypeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TypeName);
      }
      if (HasParameterName) {
        output.WriteRawTag(34);
        output.WriteString(ParameterName);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Precision != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Precision);
      }
      if (Scale != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Scale);
      }
      if (TypeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TypeName);
      }
      if (HasParameterName) {
        output.WriteRawTag(34);
        output.WriteString(ParameterName);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Precision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Precision);
      }
      if (Scale != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Scale);
      }
      if (TypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
      }
      if (HasParameterName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParameterName);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParameterMeta other) {
      if (other == null) {
        return;
      }
      if (other.Precision != 0) {
        Precision = other.Precision;
      }
      if (other.Scale != 0) {
        Scale = other.Scale;
      }
      if (other.TypeName.Length != 0) {
        TypeName = other.TypeName;
      }
      if (other.HasParameterName) {
        ParameterName = other.ParameterName;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Precision = input.ReadInt32();
            break;
          }
          case 16: {
            Scale = input.ReadInt32();
            break;
          }
          case 26: {
            TypeName = input.ReadString();
            break;
          }
          case 34: {
            ParameterName = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Precision = input.ReadInt32();
            break;
          }
          case 16: {
            Scale = input.ReadInt32();
            break;
          }
          case 26: {
            TypeName = input.ReadString();
            break;
          }
          case 34: {
            ParameterName = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///Represents the response after closing a prepared statement.
  ///The message is currently empty, serving as a simple acknowledgment of the action.
  ///This message does not contain any fields. It simply serves as an acknowledgment.
  /// </summary>
  public sealed partial class CloseStatementResponse : pb::IMessage<CloseStatementResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloseStatementResponse> _parser = new pb::MessageParser<CloseStatementResponse>(() => new CloseStatementResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseStatementResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.StatementResponsesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseStatementResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseStatementResponse(CloseStatementResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseStatementResponse Clone() {
      return new CloseStatementResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseStatementResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseStatementResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseStatementResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///Represents a frame of data that could be one of several types, offering flexibility in representing different types of data responses.
  ///This structure allows for a more generic interface that can handle various data structures.
  /// </summary>
  public sealed partial class Frame : pb::IMessage<Frame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Frame> _parser = new pb::MessageParser<Frame>(() => new Frame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Frame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Polypheny.Prism.StatementResponsesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame(Frame other) : this() {
      isLast_ = other.isLast_;
      switch (other.ResultCase) {
        case ResultOneofCase.RelationalFrame:
          RelationalFrame = other.RelationalFrame.Clone();
          break;
        case ResultOneofCase.GraphFrame:
          GraphFrame = other.GraphFrame.Clone();
          break;
        case ResultOneofCase.DocumentFrame:
          DocumentFrame = other.DocumentFrame.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Frame Clone() {
      return new Frame(this);
    }

    /// <summary>Field number for the "is_last" field.</summary>
    public const int IsLastFieldNumber = 1;
    private bool isLast_;
    /// <summary>
    /// Indicates if this frame is the last in a series of frames, useful for paginated results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLast {
      get { return isLast_; }
      set {
        isLast_ = value;
      }
    }

    /// <summary>Field number for the "relational_frame" field.</summary>
    public const int RelationalFrameFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.RelationalFrame RelationalFrame {
      get { return resultCase_ == ResultOneofCase.RelationalFrame ? (global::Polypheny.Prism.RelationalFrame) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.RelationalFrame;
      }
    }

    /// <summary>Field number for the "graph_frame" field.</summary>
    public const int GraphFrameFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.GraphFrame GraphFrame {
      get { return resultCase_ == ResultOneofCase.GraphFrame ? (global::Polypheny.Prism.GraphFrame) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.GraphFrame;
      }
    }

    /// <summary>Field number for the "document_frame" field.</summary>
    public const int DocumentFrameFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Polypheny.Prism.DocumentFrame DocumentFrame {
      get { return resultCase_ == ResultOneofCase.DocumentFrame ? (global::Polypheny.Prism.DocumentFrame) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.DocumentFrame;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      RelationalFrame = 2,
      GraphFrame = 3,
      DocumentFrame = 4,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Frame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Frame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsLast != other.IsLast) return false;
      if (!object.Equals(RelationalFrame, other.RelationalFrame)) return false;
      if (!object.Equals(GraphFrame, other.GraphFrame)) return false;
      if (!object.Equals(DocumentFrame, other.DocumentFrame)) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsLast != false) hash ^= IsLast.GetHashCode();
      if (resultCase_ == ResultOneofCase.RelationalFrame) hash ^= RelationalFrame.GetHashCode();
      if (resultCase_ == ResultOneofCase.GraphFrame) hash ^= GraphFrame.GetHashCode();
      if (resultCase_ == ResultOneofCase.DocumentFrame) hash ^= DocumentFrame.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsLast != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsLast);
      }
      if (resultCase_ == ResultOneofCase.RelationalFrame) {
        output.WriteRawTag(18);
        output.WriteMessage(RelationalFrame);
      }
      if (resultCase_ == ResultOneofCase.GraphFrame) {
        output.WriteRawTag(26);
        output.WriteMessage(GraphFrame);
      }
      if (resultCase_ == ResultOneofCase.DocumentFrame) {
        output.WriteRawTag(34);
        output.WriteMessage(DocumentFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsLast != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsLast);
      }
      if (resultCase_ == ResultOneofCase.RelationalFrame) {
        output.WriteRawTag(18);
        output.WriteMessage(RelationalFrame);
      }
      if (resultCase_ == ResultOneofCase.GraphFrame) {
        output.WriteRawTag(26);
        output.WriteMessage(GraphFrame);
      }
      if (resultCase_ == ResultOneofCase.DocumentFrame) {
        output.WriteRawTag(34);
        output.WriteMessage(DocumentFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsLast != false) {
        size += 1 + 1;
      }
      if (resultCase_ == ResultOneofCase.RelationalFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelationalFrame);
      }
      if (resultCase_ == ResultOneofCase.GraphFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GraphFrame);
      }
      if (resultCase_ == ResultOneofCase.DocumentFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocumentFrame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Frame other) {
      if (other == null) {
        return;
      }
      if (other.IsLast != false) {
        IsLast = other.IsLast;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.RelationalFrame:
          if (RelationalFrame == null) {
            RelationalFrame = new global::Polypheny.Prism.RelationalFrame();
          }
          RelationalFrame.MergeFrom(other.RelationalFrame);
          break;
        case ResultOneofCase.GraphFrame:
          if (GraphFrame == null) {
            GraphFrame = new global::Polypheny.Prism.GraphFrame();
          }
          GraphFrame.MergeFrom(other.GraphFrame);
          break;
        case ResultOneofCase.DocumentFrame:
          if (DocumentFrame == null) {
            DocumentFrame = new global::Polypheny.Prism.DocumentFrame();
          }
          DocumentFrame.MergeFrom(other.DocumentFrame);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsLast = input.ReadBool();
            break;
          }
          case 18: {
            global::Polypheny.Prism.RelationalFrame subBuilder = new global::Polypheny.Prism.RelationalFrame();
            if (resultCase_ == ResultOneofCase.RelationalFrame) {
              subBuilder.MergeFrom(RelationalFrame);
            }
            input.ReadMessage(subBuilder);
            RelationalFrame = subBuilder;
            break;
          }
          case 26: {
            global::Polypheny.Prism.GraphFrame subBuilder = new global::Polypheny.Prism.GraphFrame();
            if (resultCase_ == ResultOneofCase.GraphFrame) {
              subBuilder.MergeFrom(GraphFrame);
            }
            input.ReadMessage(subBuilder);
            GraphFrame = subBuilder;
            break;
          }
          case 34: {
            global::Polypheny.Prism.DocumentFrame subBuilder = new global::Polypheny.Prism.DocumentFrame();
            if (resultCase_ == ResultOneofCase.DocumentFrame) {
              subBuilder.MergeFrom(DocumentFrame);
            }
            input.ReadMessage(subBuilder);
            DocumentFrame = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsLast = input.ReadBool();
            break;
          }
          case 18: {
            global::Polypheny.Prism.RelationalFrame subBuilder = new global::Polypheny.Prism.RelationalFrame();
            if (resultCase_ == ResultOneofCase.RelationalFrame) {
              subBuilder.MergeFrom(RelationalFrame);
            }
            input.ReadMessage(subBuilder);
            RelationalFrame = subBuilder;
            break;
          }
          case 26: {
            global::Polypheny.Prism.GraphFrame subBuilder = new global::Polypheny.Prism.GraphFrame();
            if (resultCase_ == ResultOneofCase.GraphFrame) {
              subBuilder.MergeFrom(GraphFrame);
            }
            input.ReadMessage(subBuilder);
            GraphFrame = subBuilder;
            break;
          }
          case 34: {
            global::Polypheny.Prism.DocumentFrame subBuilder = new global::Polypheny.Prism.DocumentFrame();
            if (resultCase_ == ResultOneofCase.DocumentFrame) {
              subBuilder.MergeFrom(DocumentFrame);
            }
            input.ReadMessage(subBuilder);
            DocumentFrame = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
